<%- include('partials/header', { pageTitle: `${project.name} - Security Posture`, active: 'projects', extraCss: [
  'https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.css'
] }) %>

<div class="container mt-4">
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/projects">Projects</a></li>
      <li class="breadcrumb-item"><a href="/projects/<%= project.id %>"><%= project.name %></a></li>
      <li class="breadcrumb-item active" aria-current="page">Security Posture</li>
    </ol>
  </nav>

  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mb-0"><%= project.name %> - Security Posture</h1>
    <div class="btn-group">
      <button type="button" class="btn btn-primary" id="recalculateScoreBtn">
        <i class="bi bi-arrow-repeat me-1"></i>Recalculate Score
      </button>
      <button type="button" class="btn btn-success" id="exportReportBtn">
        <i class="bi bi-file-earmark-excel me-1"></i>Export Report
      </button>
    </div>
  </div>
  
  <!-- Alert container for notifications -->
  <div id="securityPostureAlertContainer"></div>
  
  <!-- Security Posture Summary -->
  <div class="row mb-4">
    <div class="col-md-8">
      <div class="card h-100">
        <div class="card-header">
          <h5 class="mb-0">Security Posture Summary</h5>
        </div>
        <div class="card-body">
          <div class="row mb-4">
            <div class="col-md-6">
              <h2 class="text-center mb-3">Security Posture Score</h2>
              <div class="position-relative mx-auto" style="width: 200px; height: 200px;">
                <canvas id="securityPostureGauge"></canvas>
                <div class="position-absolute top-50 start-50 translate-middle text-center">
                  <h1 class="mb-0"><%= securityPosture?.security_posture_score || 0 %></h1>
                  <p class="text-muted">out of 100</p>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <h5>Score Breakdown</h5>
              <div class="mb-3">
                <div class="d-flex justify-content-between mb-1">
                  <span>Threat Mitigation (40%)</span>
                  <span><%= Math.round((securityPosture?.mitigated_threat_count || 0) / Math.max(securityPosture?.threat_count || 1, 1) * 40) %>/40</span>
                </div>
                <div class="progress" style="height: 10px;">
                  <div class="progress-bar bg-primary" 
                       role="progressbar" 
                       style="width: <%= Math.round((securityPosture?.mitigated_threat_count || 0) / Math.max(securityPosture?.threat_count || 1, 1) * 100) %>%;" 
                       aria-valuenow="<%= Math.round((securityPosture?.mitigated_threat_count || 0) / Math.max(securityPosture?.threat_count || 1, 1) * 100) %>" 
                       aria-valuemin="0" 
                       aria-valuemax="100"></div>
                </div>
              </div>
              <div class="mb-3">
                <div class="d-flex justify-content-between mb-1">
                  <span>Safeguard Implementation (30%)</span>
                  <span><%= Math.round((securityPosture?.verified_safeguard_count || 0) / Math.max(securityPosture?.safeguard_count || 1, 1) * 30) %>/30</span>
                </div>
                <div class="progress" style="height: 10px;">
                  <div class="progress-bar bg-success" 
                       role="progressbar" 
                       style="width: <%= Math.round((securityPosture?.verified_safeguard_count || 0) / Math.max(securityPosture?.safeguard_count || 1, 1) * 100) %>%;" 
                       aria-valuenow="<%= Math.round((securityPosture?.verified_safeguard_count || 0) / Math.max(securityPosture?.safeguard_count || 1, 1) * 100) %>" 
                       aria-valuemin="0" 
                       aria-valuemax="100"></div>
                </div>
              </div>
              <div class="mb-3">
                <div class="d-flex justify-content-between mb-1">
                  <span>Vulnerability Remediation (30%)</span>
                  <span><%= Math.round((securityPosture?.remediated_vulnerability_count || 0) / Math.max(securityPosture?.vulnerability_count || 1, 1) * 30) %>/30</span>
                </div>
                <div class="progress" style="height: 10px;">
                  <div class="progress-bar bg-warning" 
                       role="progressbar" 
                       style="width: <%= Math.round((securityPosture?.remediated_vulnerability_count || 0) / Math.max(securityPosture?.vulnerability_count || 1, 1) * 100) %>%;" 
                       aria-valuenow="<%= Math.round((securityPosture?.remediated_vulnerability_count || 0) / Math.max(securityPosture?.vulnerability_count || 1, 1) * 100) %>" 
                       aria-valuemin="0" 
                       aria-valuemax="100"></div>
                </div>
              </div>
            </div>
          </div>
          <div class="row">
            <div class="col-md-6">
              <div class="card bg-light">
                <div class="card-body">
                  <h5 class="card-title">Risk Exposure</h5>
                  <h3 class="text-danger mb-0">$<%= Math.round((securityPosture?.risk_exposure_value || 0) / 1000) %>K</h3>
                  <p class="text-muted">Estimated financial impact</p>
                </div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="card bg-light">
                <div class="card-body">
                  <h5 class="card-title">Last Assessment</h5>
                  <h3 class="mb-0"><%= securityPosture?.last_assessment_date ? new Date(securityPosture.last_assessment_date).toLocaleDateString() : 'Never' %></h3>
                  <p class="text-muted">Last security assessment date</p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-4">
      <div class="card h-100">
        <div class="card-header">
          <h5 class="mb-0">Security Metrics</h5>
        </div>
        <div class="card-body">
          <div class="list-group">
            <div class="list-group-item d-flex justify-content-between align-items-center">
              <span>Threat Models</span>
              <span class="badge bg-primary rounded-pill"><%= securityPosture?.threat_model_count || 0 %></span>
            </div>
            <div class="list-group-item d-flex justify-content-between align-items-center">
              <span>Components</span>
              <span class="badge bg-primary rounded-pill"><%= securityPosture?.component_count || 0 %></span>
            </div>
            <div class="list-group-item d-flex justify-content-between align-items-center">
              <span>Threats Identified</span>
              <span class="badge bg-primary rounded-pill"><%= securityPosture?.threat_count || 0 %></span>
            </div>
            <div class="list-group-item d-flex justify-content-between align-items-center">
              <span>Threats Mitigated</span>
              <span class="badge bg-success rounded-pill"><%= securityPosture?.mitigated_threat_count || 0 %></span>
            </div>
            <div class="list-group-item d-flex justify-content-between align-items-center">
              <span>Vulnerabilities</span>
              <span class="badge bg-danger rounded-pill"><%= securityPosture?.vulnerability_count || 0 %></span>
            </div>
            <div class="list-group-item d-flex justify-content-between align-items-center">
              <span>Vulnerabilities Remediated</span>
              <span class="badge bg-success rounded-pill"><%= securityPosture?.remediated_vulnerability_count || 0 %></span>
            </div>
            <div class="list-group-item d-flex justify-content-between align-items-center">
              <span>Safeguards</span>
              <span class="badge bg-primary rounded-pill"><%= securityPosture?.safeguard_count || 0 %></span>
            </div>
            <div class="list-group-item d-flex justify-content-between align-items-center">
              <span>Verified Safeguards</span>
              <span class="badge bg-success rounded-pill"><%= securityPosture?.verified_safeguard_count || 0 %></span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Security Metrics History -->
  <div class="card mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
      <h5 class="mb-0">Security Metrics History</h5>
      <div class="btn-group">
        <a href="?period=1m" class="btn btn-sm btn-outline-secondary <%= timePeriod === '1m' ? 'active' : '' %>">1 Month</a>
        <a href="?period=3m" class="btn btn-sm btn-outline-secondary <%= timePeriod === '3m' ? 'active' : '' %>">3 Months</a>
        <a href="?period=6m" class="btn btn-sm btn-outline-secondary <%= timePeriod === '6m' ? 'active' : '' %>">6 Months</a>
        <a href="?period=1y" class="btn btn-sm btn-outline-secondary <%= timePeriod === '1y' ? 'active' : '' %>">1 Year</a>
      </div>
    </div>
    <div class="card-body">
      <canvas id="securityMetricsChart" height="250"></canvas>
    </div>
  </div>
  
  <!-- Component Business Impact Analysis -->
  <div class="card mb-4">
    <div class="card-header">
      <h5 class="mb-0">Component Business Impact Analysis</h5>
    </div>
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-striped table-bordered" id="componentsTable">
          <thead>
            <tr>
              <th>Component</th>
              <th>Type</th>
              <th>Confidentiality</th>
              <th>Integrity</th>
              <th>Availability</th>
              <th>Financial Impact</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% components.forEach(component => { %>
              <tr>
                <td><%= component.name %></td>
                <td><%= component.type || 'N/A' %></td>
                <td>
                  <span class="badge bg-<%= component.confidentiality_impact === 'Critical' ? 'danger' : (component.confidentiality_impact === 'High' ? 'warning' : (component.confidentiality_impact === 'Medium' ? 'info' : 'secondary')) %>">
                    <%= component.confidentiality_impact || 'Not Set' %>
                  </span>
                </td>
                <td>
                  <span class="badge bg-<%= component.integrity_impact === 'Critical' ? 'danger' : (component.integrity_impact === 'High' ? 'warning' : (component.integrity_impact === 'Medium' ? 'info' : 'secondary')) %>">
                    <%= component.integrity_impact || 'Not Set' %>
                  </span>
                </td>
                <td>
                  <span class="badge bg-<%= component.availability_impact === 'Critical' ? 'danger' : (component.availability_impact === 'High' ? 'warning' : (component.availability_impact === 'Medium' ? 'info' : 'secondary')) %>">
                    <%= component.availability_impact || 'Not Set' %>
                  </span>
                </td>
                <td class="text-end">$<%= Math.round((component.financial_impact || 0) / 1000) %>K</td>
                <td>
                  <div class="btn-group">
                    <button class="btn btn-sm btn-outline-primary edit-impact-btn" 
                            data-component-id="<%= component.id %>" 
                            data-component-name="<%= component.name %>"
                            data-bs-toggle="modal" 
                            data-bs-target="#editImpactModal">
                      <i class="bi bi-pencil"></i>
                    </button>
                    <a href="/components/<%= component.id %>" class="btn btn-sm btn-outline-secondary">
                      <i class="bi bi-eye"></i>
                    </a>
                  </div>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Edit Business Impact Modal -->
<div class="modal fade" id="editImpactModal" tabindex="-1" aria-labelledby="editImpactModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editImpactModalLabel">Edit Business Impact</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="businessImpactForm">
          <input type="hidden" id="componentId" name="componentId">
          
          <div class="mb-3">
            <label for="componentName" class="form-label">Component</label>
            <input type="text" class="form-control" id="componentName" readonly>
          </div>
          
          <div class="row mb-3">
            <div class="col-md-4">
              <label for="confidentialityImpact" class="form-label">Confidentiality Impact</label>
              <select class="form-select" id="confidentialityImpact" name="confidentiality_impact">
                <option value="Critical">Critical</option>
                <option value="High">High</option>
                <option value="Medium">Medium</option>
                <option value="Low">Low</option>
                <option value="None">None</option>
              </select>
            </div>
            <div class="col-md-4">
              <label for="integrityImpact" class="form-label">Integrity Impact</label>
              <select class="form-select" id="integrityImpact" name="integrity_impact">
                <option value="Critical">Critical</option>
                <option value="High">High</option>
                <option value="Medium">Medium</option>
                <option value="Low">Low</option>
                <option value="None">None</option>
              </select>
            </div>
            <div class="col-md-4">
              <label for="availabilityImpact" class="form-label">Availability Impact</label>
              <select class="form-select" id="availabilityImpact" name="availability_impact">
                <option value="Critical">Critical</option>
                <option value="High">High</option>
                <option value="Medium">Medium</option>
                <option value="Low">Low</option>
                <option value="None">None</option>
              </select>
            </div>
          </div>
          
          <div class="row mb-3">
            <div class="col-md-4">
              <label for="financialImpact" class="form-label">Financial Impact ($)</label>
              <input type="number" class="form-control" id="financialImpact" name="financial_impact" min="0" step="1000">
            </div>
            <div class="col-md-4">
              <label for="reputationalImpact" class="form-label">Reputational Impact</label>
              <select class="form-select" id="reputationalImpact" name="reputational_impact">
                <option value="Critical">Critical</option>
                <option value="High">High</option>
                <option value="Medium">Medium</option>
                <option value="Low">Low</option>
                <option value="None">None</option>
              </select>
            </div>
            <div class="col-md-4">
              <label for="regulatoryImpact" class="form-label">Regulatory Impact</label>
              <select class="form-select" id="regulatoryImpact" name="regulatory_impact">
                <option value="Critical">Critical</option>
                <option value="High">High</option>
                <option value="Medium">Medium</option>
                <option value="Low">Low</option>
                <option value="None">None</option>
              </select>
            </div>
          </div>
          
          <div class="mb-3">
            <label for="impactNotes" class="form-label">Notes</label>
            <textarea class="form-control" id="impactNotes" name="notes" rows="3"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button type="button" class="btn btn-primary" id="saveImpactBtn">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Chart.js for dashboard -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>

<!-- Security Posture Scripts -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Security Posture Gauge
    const securityPostureGaugeCtx = document.getElementById('securityPostureGauge').getContext('2d');
    const securityPostureScore = <%= securityPosture?.security_posture_score || 0 %>;
    
    new Chart(securityPostureGaugeCtx, {
      type: 'doughnut',
      data: {
        datasets: [{
          data: [securityPostureScore, 100 - securityPostureScore],
          backgroundColor: [
            securityPostureScore >= 75 ? 'rgba(40, 167, 69, 0.8)' : 
              (securityPostureScore >= 50 ? 'rgba(255, 193, 7, 0.8)' : 'rgba(220, 53, 69, 0.8)'),
            'rgba(200, 200, 200, 0.1)'
          ],
          borderWidth: 0,
          cutout: '80%'
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: true,
        plugins: {
          legend: {
            display: false
          },
          tooltip: {
            enabled: false
          }
        }
      }
    });
    
    // Security Metrics History Chart
    const securityMetricsChartCtx = document.getElementById('securityMetricsChart').getContext('2d');
    
    // Prepare data for chart
    const metricsData = <%- JSON.stringify(metricsHistory || []) %>;
    const labels = metricsData.map(metric => new Date(metric.metric_date).toLocaleDateString());
    const securityScores = metricsData.map(metric => metric.security_posture_score);
    const threatCounts = metricsData.map(metric => metric.threat_count);
    const mitigatedThreatCounts = metricsData.map(metric => metric.mitigated_threat_count);
    
    new Chart(securityMetricsChartCtx, {
      type: 'line',
      data: {
        labels: labels,
        datasets: [
          {
            label: 'Security Posture Score',
            data: securityScores,
            borderColor: 'rgba(54, 162, 235, 1)',
            backgroundColor: 'rgba(54, 162, 235, 0.2)',
            yAxisID: 'y',
            tension: 0.1
          },
          {
            label: 'Threats',
            data: threatCounts,
            borderColor: 'rgba(255, 99, 132, 1)',
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
            yAxisID: 'y1',
            tension: 0.1
          },
          {
            label: 'Mitigated Threats',
            data: mitigatedThreatCounts,
            borderColor: 'rgba(75, 192, 192, 1)',
            backgroundColor: 'rgba(75, 192, 192, 0.2)',
            yAxisID: 'y1',
            tension: 0.1
          }
        ]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          x: {
            title: {
              display: true,
              text: 'Date'
            }
          },
          y: {
            type: 'linear',
            display: true,
            position: 'left',
            title: {
              display: true,
              text: 'Security Score'
            },
            min: 0,
            max: 100
          },
          y1: {
            type: 'linear',
            display: true,
            position: 'right',
            title: {
              display: true,
              text: 'Count'
            },
            min: 0,
            grid: {
              drawOnChartArea: false
            }
          }
        },
        plugins: {
          legend: {
            position: 'top'
          },
          tooltip: {
            mode: 'index',
            intersect: false
          }
        }
      }
    });
    
    // Initialize DataTables
    $('#componentsTable').DataTable({
      responsive: true,
      order: [[5, 'desc']], // Sort by financial impact by default
      pageLength: 10,
      language: {
        search: "_INPUT_",
        searchPlaceholder: "Search components..."
      }
    });
    
    // Recalculate Score Button
    document.getElementById('recalculateScoreBtn').addEventListener('click', function() {
      const alertContainer = document.getElementById('securityPostureAlertContainer');
      alertContainer.innerHTML = `
        <div class="alert alert-info alert-dismissible fade show" role="alert">
          <i class="bi bi-arrow-repeat spin me-2"></i>Recalculating security posture score...
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      `;
      
      // Add a spinning animation
      const style = document.createElement('style');
      style.textContent = `
        .spin {
          animation: spin 1s linear infinite;
        }
        @keyframes spin {
          from { transform: rotate(0deg); }
          to { transform: rotate(360deg); }
        }
      `;
      document.head.appendChild(style);
      
      // Call API to recalculate score
      fetch('/api/projects/<%= project.id %>/security-posture/update', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alertContainer.innerHTML = `
            <div class="alert alert-success alert-dismissible fade show" role="alert">
              <i class="bi bi-check-circle me-2"></i>Security posture score updated to ${data.score}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          `;
          
          // Reload the page after a short delay
          setTimeout(() => {
            window.location.reload();
          }, 1500);
        } else {
          alertContainer.innerHTML = `
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
              <i class="bi bi-exclamation-triangle me-2"></i>Error updating security posture score: ${data.error}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          `;
        }
      })
      .catch(error => {
        alertContainer.innerHTML = `
          <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>Error updating security posture score: ${error.message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        `;
      });
    });
    
    // Export Report Button
    document.getElementById('exportReportBtn').addEventListener('click', function() {
      const alertContainer = document.getElementById('securityPostureAlertContainer');
      alertContainer.innerHTML = `
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          <i class="bi bi-file-earmark-excel me-2"></i>Security posture report exported successfully!
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      `;
      
      // In a real implementation, this would generate and download an Excel file
    });
    
    // Edit Business Impact Modal
    const editImpactButtons = document.querySelectorAll('.edit-impact-btn');
    editImpactButtons.forEach(button => {
      button.addEventListener('click', function() {
        const componentId = this.getAttribute('data-component-id');
        const componentName = this.getAttribute('data-component-name');
        
        document.getElementById('componentId').value = componentId;
        document.getElementById('componentName').value = componentName;
        
        // In a real implementation, you would fetch the current impact data for this component
        // and populate the form fields
      });
    });
    
    // Save Business Impact Button
    document.getElementById('saveImpactBtn').addEventListener('click', function() {
      const form = document.getElementById('businessImpactForm');
      const formData = new FormData(form);
      const componentId = document.getElementById('componentId').value;
      
      const impactData = {};
      formData.forEach((value, key) => {
        impactData[key] = value;
      });
      
      // Call API to update business impact
      fetch(`/api/projects/<%= project.id %>/components/${componentId}/business-impact`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(impactData)
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // Hide the modal
          const modal = bootstrap.Modal.getInstance(document.getElementById('editImpactModal'));
          modal.hide();
          
          // Show success message
          const alertContainer = document.getElementById('securityPostureAlertContainer');
          alertContainer.innerHTML = `
            <div class="alert alert-success alert-dismissible fade show" role="alert">
              <i class="bi bi-check-circle me-2"></i>Business impact analysis updated successfully!
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          `;
          
          // Reload the page after a short delay
          setTimeout(() => {
            window.location.reload();
          }, 1500);
        } else {
          // Show error message
          const alertContainer = document.getElementById('securityPostureAlertContainer');
          alertContainer.innerHTML = `
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
              <i class="bi bi-exclamation-triangle me-2"></i>Error updating business impact analysis: ${data.error}
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
          `;
        }
      })
      .catch(error => {
        // Show error message
        const alertContainer = document.getElementById('securityPostureAlertContainer');
        alertContainer.innerHTML = `
          <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle me-2"></i>Error updating business impact analysis: ${error.message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
          </div>
        `;
      });
    });
  });
</script>

<%- include('partials/footer', { extraJs: [] }) %>
