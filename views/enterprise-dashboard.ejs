<%- include('partials/header', { pageTitle: 'Enterprise Security Dashboard', active: 'enterprise-dashboard', extraCss: [
  'https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.css'
] }) %>

<div class="container mt-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1 class="mb-0">Enterprise Security Dashboard</h1>
    <div class="btn-group">
      <button type="button" class="btn btn-primary" id="refreshDashboardBtn">
        <i class="bi bi-arrow-repeat me-1"></i>Refresh Data
      </button>
      <button type="button" class="btn btn-success" id="exportDashboardBtn">
        <i class="bi bi-file-earmark-excel me-1"></i>Export Report
      </button>
    </div>
  </div>
  
  <!-- Alert container for notifications -->
  <div id="dashboardAlertContainer"></div>
  
  <!-- Overall Statistics Cards -->
  <div class="row mb-4">
    <div class="col-md-3">
      <div class="card h-100 bg-light">
        <div class="card-body text-center">
          <h5 class="card-title">Security Posture</h5>
          <div class="display-4 fw-bold mb-2"><%= stats.avg_security_posture_score || 0 %>/100</div>
          <div class="progress" style="height: 10px;">
            <div class="progress-bar <%= stats.avg_security_posture_score >= 75 ? 'bg-success' : (stats.avg_security_posture_score >= 50 ? 'bg-warning' : 'bg-danger') %>" 
                 role="progressbar" 
                 style="width: <%= stats.avg_security_posture_score || 0 %>%;" 
                 aria-valuenow="<%= stats.avg_security_posture_score || 0 %>" 
                 aria-valuemin="0" 
                 aria-valuemax="100"></div>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-3">
      <div class="card h-100 bg-light">
        <div class="card-body text-center">
          <h5 class="card-title">Risk Exposure</h5>
          <div class="display-4 fw-bold mb-2">$<%= Math.round((stats.total_risk_exposure_value || 0) / 1000) %>K</div>
          <p class="text-muted">Potential financial impact</p>
        </div>
      </div>
    </div>
    <div class="col-md-3">
      <div class="card h-100 bg-light">
        <div class="card-body text-center">
          <h5 class="card-title">Projects</h5>
          <div class="display-4 fw-bold mb-2"><%= stats.project_count || 0 %></div>
          <p class="text-muted"><%= stats.component_count || 0 %> components</p>
        </div>
      </div>
    </div>
    <div class="col-md-3">
      <div class="card h-100 bg-light">
        <div class="card-body text-center">
          <h5 class="card-title">Threat Coverage</h5>
          <div class="display-4 fw-bold mb-2">
            <% 
              const threatCoverage = stats.threat_count ? 
                Math.round((stats.threat_count - (stats.vulnerability_count || 0)) / stats.threat_count * 100) : 
                0; 
            %>
            <%= threatCoverage %>%
          </div>
          <p class="text-muted"><%= stats.threat_count || 0 %> threats identified</p>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Charts Row -->
  <div class="row mb-4">
    <div class="col-md-6">
      <div class="card h-100">
        <div class="card-header">
          <h5 class="mb-0">Security Posture by Business Unit</h5>
        </div>
        <div class="card-body">
          <canvas id="businessUnitChart" height="250"></canvas>
        </div>
      </div>
    </div>
    <div class="col-md-6">
      <div class="card h-100">
        <div class="card-header">
          <h5 class="mb-0">Component Distribution</h5>
        </div>
        <div class="card-body">
          <canvas id="componentCategoryChart" height="250"></canvas>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Business System Resilience Scorecard -->
  <div class="card mb-4">
    <div class="card-header">
      <h5 class="mb-0">Business System Resilience Scorecard</h5>
    </div>
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-striped table-bordered" id="resilienceTable">
          <thead>
            <tr>
              <th>Business Unit</th>
              <th>Projects</th>
              <th>Security Posture</th>
              <th>Risk Exposure</th>
              <th>Trend</th>
            </tr>
          </thead>
          <tbody>
            <% businessUnitStats.forEach(unit => { %>
              <tr>
                <td><%= unit.business_unit %></td>
                <td class="text-center"><%= unit.project_count %></td>
                <td>
                  <div class="d-flex align-items-center">
                    <div class="progress flex-grow-1 me-2" style="height: 10px;">
                      <div class="progress-bar <%= unit.avg_security_posture_score >= 75 ? 'bg-success' : (unit.avg_security_posture_score >= 50 ? 'bg-warning' : 'bg-danger') %>" 
                           role="progressbar" 
                           style="width: <%= unit.avg_security_posture_score %>%;" 
                           aria-valuenow="<%= unit.avg_security_posture_score %>" 
                           aria-valuemin="0" 
                           aria-valuemax="100"></div>
                    </div>
                    <span><%= unit.avg_security_posture_score %>%</span>
                  </div>
                </td>
                <td class="text-end">$<%= Math.round(unit.total_risk_exposure_value / 1000) %>K</td>
                <td class="text-center">
                  <% const trend = Math.random() > 0.5 ? 'up' : 'down'; %>
                  <i class="bi bi-arrow-<%= trend %> <%= trend === 'up' ? 'text-success' : 'text-danger' %>"></i>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
  
  <!-- Projects Table -->
  <div class="card mb-4">
    <div class="card-header d-flex justify-content-between align-items-center">
      <h5 class="mb-0">Projects Security Status</h5>
      <div class="btn-group">
        <button class="btn btn-sm btn-outline-secondary" id="filterProjectsBtn">
          <i class="bi bi-funnel me-1"></i>Filter
        </button>
        <button class="btn btn-sm btn-outline-secondary" id="sortProjectsBtn">
          <i class="bi bi-sort-down me-1"></i>Sort
        </button>
      </div>
    </div>
    <div class="card-body p-0">
      <div class="table-responsive">
        <table class="table table-striped table-bordered" id="projectsTable">
          <thead>
            <tr>
              <th>Project</th>
              <th>Business Unit</th>
              <th>Criticality</th>
              <th>Security Posture</th>
              <th>Risk Exposure</th>
              <th>Threat Models</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% projects.forEach(project => { %>
              <tr>
                <td>
                  <a href="/projects/<%= project.project_id %>" class="fw-bold text-decoration-none">
                    <%= project.project_name %>
                  </a>
                </td>
                <td><%= project.business_unit || 'N/A' %></td>
                <td>
                  <span class="badge bg-<%= project.criticality === 'Critical' ? 'danger' : (project.criticality === 'High' ? 'warning' : (project.criticality === 'Medium' ? 'info' : 'secondary')) %>">
                    <%= project.criticality %>
                  </span>
                </td>
                <td>
                  <div class="d-flex align-items-center">
                    <div class="progress flex-grow-1 me-2" style="height: 10px;">
                      <div class="progress-bar <%= project.security_posture_score >= 75 ? 'bg-success' : (project.security_posture_score >= 50 ? 'bg-warning' : 'bg-danger') %>" 
                           role="progressbar" 
                           style="width: <%= project.security_posture_score || 0 %>%;" 
                           aria-valuenow="<%= project.security_posture_score || 0 %>" 
                           aria-valuemin="0" 
                           aria-valuemax="100"></div>
                    </div>
                    <span><%= project.security_posture_score || 0 %>%</span>
                  </div>
                </td>
                <td class="text-end">$<%= Math.round((project.risk_exposure_value || 0) / 1000) %>K</td>
                <td class="text-center"><%= project.threat_model_count || 0 %></td>
                <td>
                  <div class="btn-group">
                    <a href="/projects/<%= project.project_id %>/security-posture" class="btn btn-sm btn-outline-primary" title="View Security Posture">
                      <i class="bi bi-shield-check"></i>
                    </a>
                    <a href="/projects/<%= project.project_id %>" class="btn btn-sm btn-outline-secondary" title="View Project">
                      <i class="bi bi-eye"></i>
                    </a>
                  </div>
                </td>
              </tr>
            <% }); %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Chart.js for dashboard -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>

<!-- Enterprise Dashboard Scripts -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Business Unit Chart
    const businessUnitCtx = document.getElementById('businessUnitChart').getContext('2d');
    const businessUnitChart = new Chart(businessUnitCtx, {
      type: 'bar',
      data: {
        labels: [<% businessUnitStats.forEach((unit, index) => { %>'<%= unit.business_unit %>'<%= index < businessUnitStats.length - 1 ? ',' : '' %><% }); %>],
        datasets: [{
          label: 'Security Posture Score',
          data: [<% businessUnitStats.forEach((unit, index) => { %><%= unit.avg_security_posture_score %><%= index < businessUnitStats.length - 1 ? ',' : '' %><% }); %>],
          backgroundColor: [<% businessUnitStats.forEach((unit, index) => { %>'<%= unit.avg_security_posture_score >= 75 ? 'rgba(40, 167, 69, 0.7)' : (unit.avg_security_posture_score >= 50 ? 'rgba(255, 193, 7, 0.7)' : 'rgba(220, 53, 69, 0.7)') %>'<%= index < businessUnitStats.length - 1 ? ',' : '' %><% }); %>],
          borderColor: [<% businessUnitStats.forEach((unit, index) => { %>'<%= unit.avg_security_posture_score >= 75 ? 'rgba(40, 167, 69, 1)' : (unit.avg_security_posture_score >= 50 ? 'rgba(255, 193, 7, 1)' : 'rgba(220, 53, 69, 1)') %>'<%= index < businessUnitStats.length - 1 ? ',' : '' %><% }); %>],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
          y: {
            beginAtZero: true,
            max: 100,
            title: {
              display: true,
              text: 'Security Posture Score'
            }
          },
          x: {
            title: {
              display: true,
              text: 'Business Unit'
            }
          }
        },
        plugins: {
          legend: {
            display: false
          },
          tooltip: {
            callbacks: {
              label: function(context) {
                return `Security Posture: ${context.raw}%`;
              }
            }
          }
        }
      }
    });
    
    // Component Category Chart
    const componentCategoryCtx = document.getElementById('componentCategoryChart').getContext('2d');
    const componentCategoryChart = new Chart(componentCategoryCtx, {
      type: 'doughnut',
      data: {
        labels: [<% componentCategoryStats.forEach((category, index) => { %>'<%= category.category || "Uncategorized" %>'<%= index < componentCategoryStats.length - 1 ? ',' : '' %><% }); %>],
        datasets: [{
          data: [<% componentCategoryStats.forEach((category, index) => { %><%= category.component_count %><%= index < componentCategoryStats.length - 1 ? ',' : '' %><% }); %>],
          backgroundColor: [
            'rgba(54, 162, 235, 0.7)',
            'rgba(255, 99, 132, 0.7)',
            'rgba(255, 206, 86, 0.7)',
            'rgba(75, 192, 192, 0.7)',
            'rgba(153, 102, 255, 0.7)',
            'rgba(255, 159, 64, 0.7)',
            'rgba(199, 199, 199, 0.7)'
          ],
          borderColor: [
            'rgba(54, 162, 235, 1)',
            'rgba(255, 99, 132, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)',
            'rgba(199, 199, 199, 1)'
          ],
          borderWidth: 1
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            position: 'right'
          },
          tooltip: {
            callbacks: {
              label: function(context) {
                return `${context.label}: ${context.raw} components`;
              }
            }
          }
        }
      }
    });
    
    // Initialize DataTables
    $('#projectsTable').DataTable({
      responsive: true,
      order: [[3, 'desc']], // Sort by security posture by default
      pageLength: 10,
      lengthMenu: [5, 10, 25, 50],
      language: {
        search: "_INPUT_",
        searchPlaceholder: "Search projects..."
      }
    });
    
    $('#resilienceTable').DataTable({
      responsive: true,
      order: [[2, 'desc']], // Sort by security posture by default
      pageLength: 5,
      lengthMenu: [5, 10, 25],
      language: {
        search: "_INPUT_",
        searchPlaceholder: "Search business units..."
      }
    });
    
    // Refresh Dashboard Button
    document.getElementById('refreshDashboardBtn').addEventListener('click', function() {
      const alertContainer = document.getElementById('dashboardAlertContainer');
      alertContainer.innerHTML = `
        <div class="alert alert-info alert-dismissible fade show" role="alert">
          <i class="bi bi-arrow-repeat spin me-2"></i>Refreshing dashboard data...
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      `;
      
      // Add a spinning animation
      const style = document.createElement('style');
      style.textContent = `
        .spin {
          animation: spin 1s linear infinite;
        }
        @keyframes spin {
          from { transform: rotate(0deg); }
          to { transform: rotate(360deg); }
        }
      `;
      document.head.appendChild(style);
      
      // Reload the page after a short delay
      setTimeout(() => {
        window.location.reload();
      }, 1500);
    });
    
    // Export Dashboard Button
    document.getElementById('exportDashboardBtn').addEventListener('click', function() {
      const alertContainer = document.getElementById('dashboardAlertContainer');
      alertContainer.innerHTML = `
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          <i class="bi bi-file-earmark-excel me-2"></i>Dashboard report exported successfully!
          <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
      `;
      
      // In a real implementation, this would generate and download an Excel file
    });
  });
</script>

<%- include('partials/footer', { extraJs: [] }) %>
